server.port: 30030
server.host: localhost
# in case you want to run rabbitMq and keycloak on a dev server and not on your local machine like the software componentens(MFcomposite, mfinstrument...)
env.host: ${server.host}
#env.host: 192.168.100.73
openid.port: 30024
logging:
  level:
    root: INFO
    de.hf.myfinance: DEBUG
app:
  mfinstruments:
    host: ${server.host}
    port: 30031
  mftransactions:
    host: ${server.host}
    port: 30032
  mfmarketdata:
    host: ${server.host}
    port: 30033
  mfvaluation:
    host: ${server.host}
    port: 30034

springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: de.hf.myfinance
  pathsToMatch: /**

api:
  common:
    version: 1.0.0
    title: CompositeApi
    description: the composition of alle myfinance APIs

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.validateInstrumentRequest-out-0:
    destination: validateInstrumentRequest
    producer:
      required-groups: validateInstrumentauditGroup
  bindings.validateTransactionRequest-out-0:
    destination: validateTransactionRequest
    producer:
      required-groups: validateTransactionRequestAuditGroup
  bindings.validateRecurrentTransactionRequest-out-0:
    destination: validateRecurrentTransactionRequest
    producer:
      required-groups: validateRecurrentTransactionRequestAuditGroup
  bindings.processRecurrentTransactions-out-0:
    destination: processRecurrentTransactions
    producer:
      required-groups: processRecurrentTransactionsAuditGroup
  bindings.loadNewMarketData-out-0:
    destination: loadNewMarketData
    producer:
      required-groups: loadNewMarketDataAuditGroup
  bindings.recurrentTransactionApproved-out-0:
    destination: recurrentTransactionApproved
    producer:
      required-groups: recurrentTransactionApprovedAuditGroup

spring.rabbitmq:
  host: ${env.host}
  port: 30021
  username: user
  password: vulkan

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${env.host}:${openid.port}/realms/myfinance
          jwk-set-uri: http://${env.host}:${openid.port}/realms/myfinance/protocol/openid-connect/certs